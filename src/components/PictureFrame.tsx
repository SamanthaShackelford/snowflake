/*
Auto-generated by: https://github.com/pmndrs/gltfjsx
*/

import * as THREE from 'three'
import React, { useRef } from 'react'
import { useGLTF } from '@react-three/drei'
import { GLTF } from 'three-stdlib'

type GLTFResult = GLTF & {
  nodes: {
    picture_frame002: THREE.Mesh
    ['matte-back']: THREE.Mesh
    picture_glass001: THREE.Mesh
    picture_matte001: THREE.Mesh
    picture_photo001: THREE.Mesh
    picture_glass003: THREE.Mesh
  }
  materials: {
    frame: THREE.MeshStandardMaterial
    ['Material.001']: THREE.MeshStandardMaterial
    glass: THREE.MeshStandardMaterial
    matte: THREE.MeshStandardMaterial
    photo: THREE.MeshStandardMaterial
    ['glass.001']: THREE.MeshStandardMaterial
  }
}

export function PictureFrame(props: JSX.IntrinsicElements['group']) {
  const { nodes, materials } = useGLTF('/pictureFrame1.glb') as GLTFResult
  return (
    <group {...props} dispose={null}>
      <mesh geometry={nodes.picture_frame002.geometry} material={materials.frame} />
      <mesh geometry={nodes['matte-back'].geometry} material={materials['Material.001']} rotation={[-Math.PI, 0, -Math.PI]} scale={[1, 1, 1.6]} />
      <mesh geometry={nodes.picture_glass001.geometry} material={materials.glass} position={[0, 0, 0.07]} />
      <mesh geometry={nodes.picture_matte001.geometry} material={materials.matte} />
      <mesh geometry={nodes.picture_photo001.geometry} material={materials.photo} />
      <mesh geometry={nodes.picture_glass003.geometry} material={materials['glass.001']} position={[0, 0, 0.07]} />
    </group>
  )
}

useGLTF.preload('/pictureFrame1.glb')
