/*
Auto-generated by: https://github.com/pmndrs/gltfjsx
*/

import React, { useRef, useEffect } from 'react'
import { useGLTF, useAnimations, useCubeTexture} from '@react-three/drei'


// type GLTFActions = Record<ActionName, THREE.AnimationAction>

export function Snowflake(props) {
  const { nodes, materials, animations } = useGLTF('/snowflake01.glb')
  const group = useRef();
  const { actions } = useAnimations(animations, group)

  // Access Animations here
  // useEffect(() => {
  //   console.log('actions', actions)
  //   // actions["SnowflakeAction.001"]?.play();
  //   Object.keys(actions).forEach((key) => {
  //     console.log('key', key)
  //     console.log('actions?[key]', actions?.[key])
  //     // actions?.[key].play()
  //   })
  // })


  const texture = useCubeTexture(
    ["px.png", "nx.png", "py.png", "ny.png", "pz.png", "nz.png"],
    { path: "sky-cube-map/"}
  )
  
  
  return (
    <group  ref={group} {...props} dispose={null}>
      <group name="Scene">
        <mesh name="Snowflake" 
          geometry={nodes.Snowflake.geometry} 
          material={materials.Ice} 
          rotation={[0, -0.01, 0.02]}
          position={[5, 0, 1]}
          >
          <meshBasicMaterial
            envMap={texture}
          />
        </mesh>
      </group>
    </group>
  )
}

useGLTF.preload('/snowflake01.glb')
