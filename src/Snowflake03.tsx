/*
Auto-generated by: https://github.com/pmndrs/gltfjsx
*/

import * as THREE from 'three'
import React, { useRef, useEffect } from 'react'
import { useGLTF, useAnimations } from '@react-three/drei'
import { GLTF } from 'three-stdlib'

type GLTFResult = GLTF & {
  nodes: {
    Snowflake: THREE.Mesh
  }
  materials: {
    ['Ice Imperfections']: THREE.MeshStandardMaterial
  }
}

type ActionName = 'SnowflakeAction.001'
type GLTFActions = Record<ActionName, THREE.AnimationAction>

export function Snowflake03(props: JSX.IntrinsicElements['group']) {
  const group = useRef<THREE.Group>()
  const { nodes, materials, animations } = useGLTF('/snowflake03.glb') as GLTFResult
  const { actions } = useAnimations<GLTFActions>(animations, group)

  useEffect(() => {
    console.log('actions', actions)
    actions["SnowflakeAction.001"]?.play();
  })

  return (
    <group ref={group} {...props} dispose={null}>
      <group name="Scene">
        <mesh name="Snowflake" geometry={nodes.Snowflake.geometry} material={materials['Ice Imperfections']} rotation={[0, -0.77, 0.26]} />
      </group>
    </group>
  )
}

useGLTF.preload('/snowflake03.glb')
